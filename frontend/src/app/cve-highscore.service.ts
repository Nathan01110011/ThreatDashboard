import { identifierName } from '@angular/compiler';
import { Injectable } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { ApiFacadeService } from './api-facade.service';

export interface CveHighscore {
  identifier: string;
  tweetCount: number;
}

@Injectable({
  providedIn: 'root'
})
export class CveHighscoreService {

  highscores = new BehaviorSubject<Array<CveHighscore>>([]);

  constructor(private api: ApiFacadeService) { }

  cveHighscores(): Observable<Array<CveHighscore>> {
    return this.highscores;
  }

  refresh() {
    this.api.latestCvesMentions().subscribe((cves) => {
      const highscores: Array<CveHighscore> = cves.map((cve) => {
        let hs = {
          identifier: cve.id,
          tweetCount: cve.mentionCount
        };
        return hs;
      });

      console.log("highscores:", highscores);
      this.highscores.next(highscores);
    });
  }
}
